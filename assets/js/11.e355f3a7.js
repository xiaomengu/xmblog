(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{339:function(s,a,e){"use strict";e.r(a);var t=e(3),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git实际开发使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git实际开发使用"}},[s._v("#")]),s._v(" Git实际开发使用")]),s._v(" "),a("h2",{attrs:{id:"提交和拉取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交和拉取"}},[s._v("#")]),s._v(" 提交和拉取")]),s._v(" "),a("p",[s._v("1.项目刚开始队长新建项目远程仓库")]),s._v(" "),a("p",[s._v("2.队员通过队长邀请或者克隆这个项目远程仓库到本地")]),s._v(" "),a("p",[s._v("3.在本地项目文件夹下打开Git Bush,在项目名后会出现分支名称 （第一次一般是主分支master）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://xiaomengu.github.io/xmblog/img/gitbush.png",alt:"image"}})]),s._v(" "),a("p",[s._v("队员开发者进行开发代码后提交代码：")]),s._v(" "),a("p",[s._v("（1）在分支下 ，这个命令是把更改的"),a("strong",[s._v("所有文件")]),s._v("提交到本地暂存区")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git add .  //提交所有更改的文件到暂存区\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("（如果指定提交的文件，则通过下边的命令）注意：这是文件的提交")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git add file1 file2 file3\n//或者单个提交,就是麻烦一点\ngit add file1\ngit add file2\ngit add file3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这是文件夹的提交")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git add 文件夹名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("撤销添加到暂存区的文件")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("git reset HEAD -- .")]),s._v(' (注意最后的一个".",这条命令帮助我们一次性撤销所有放入暂存区的文件)')]),s._v(" "),a("li",[a("code",[s._v("git reset HEAD -- filename")]),s._v("(撤销指定目标文件)")]),s._v(" "),a("li",[a("code",[s._v("git rm --cached filename")]),s._v("(撤销指定目标文件)")]),s._v(" "),a("li",[s._v("以上三种方法只是把文件从暂存区中删除了（或者叫撤销了），并不会修改文件内容，也不会删除文件，在本地夹里还能找到。撤销后的文件状态是未被暂存的状态。\n另外，"),a("code",[s._v("git rm -f filename")]),s._v("命令，也能把文件从暂存区删除，但是此命令也同时删除了本地文件，回收站中也找不到了，提醒广大同胞，慎重使用此命令来撤销暂存区的文件。")])]),s._v(" "),a("p",[s._v("（2）然后下边这个命令是提交文件的一些说明信息,将暂存区内容添加到本地仓库中(注意：还不是远程仓库)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('git commit -am"提交的一些说明信息"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("（3）最后提交到远程仓库")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git push  //如果文件夹中没有任何文件，则不会push到远程仓库\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("（4）如果发现其他队员更新代码到远程仓库master，可以通过下边的命令拉取到自己电脑上")]),s._v(" "),a("p",[s._v("（此时，可以通过下边的命令查看仓库当前的状态，显示有变更的文件）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git status\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后拉取代码")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git pull\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("实际项目开发过程中，一般都是队长在Github或者Gitee上新建一个远程仓库，一般项目主分支是master")]),s._v(" "),a("p",[s._v("注意：我们队员进行开发项目的时候推送代码到这个仓库，一般是不直接推送到master主分支的，主要是为了以后代码修改和测试的时候出现问题影响效率和项目主分支的线上运行")]),s._v(" "),a("p",[s._v("这时候我们队员就要在"),a("strong",[s._v("自己的电脑上新建一个分支")]),s._v("，是在项目主分支master下建的一个分支，这样一来代码出现问题就不影响master主分支，"),a("strong",[s._v("以后的代码提交和修改都是在自己的间的这个分支上")])]),s._v(" "),a("p",[a("strong",[s._v("主分支一般队长操作以及把所有队员的分支合并到主分支master")])]),s._v(" "),a("h2",{attrs:{id:"新建分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建分支"}},[s._v("#")]),s._v(" 新建分支")]),s._v(" "),a("p",[a("strong",[s._v("队员")])]),s._v(" "),a("p",[s._v("（1）新建分支（在主分支master下）此时这个"),a("strong",[s._v("分支的代码和主分支的代码一模一样")]),s._v("，"),a("strong",[s._v("但这个分支是在自己本地")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git checkout -b 分支名   //注意这个分支名不带引号的英文，最好是自己的名字缩写\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("修改代码后（此时是在本地自己新建的分支上，第一次push 需要加 origin）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('git add .\ngit commit -am"修改了一些内容"\ngit push //此时会报一个fatal:提示要把你这个本地的分支提交的远程仓库需要加一个命令 origin 本地新建的分支名\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git push origin 本地新建的分支名  //注：origin是远程仓库的名字\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("（这个两个分支互不影响）")]),s._v(" "),a("p",[s._v("如果你想要切换回主分支master")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git checkout master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"合并分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[s._v("#")]),s._v(" 合并分支")]),s._v(" "),a("p",[a("strong",[s._v("队长")])]),s._v(" "),a("p",[s._v("队长（一般是主分支master操作者）"),a("strong",[s._v("第一次")]),s._v("拉取队员的代码")]),s._v(" "),a("p",[a("strong",[s._v("git pull")]),s._v(" 后会提示有新的分支建立")]),s._v(" "),a("p",[s._v("第一步：队长想要"),a("strong",[s._v("合并分支的代码到master")]),s._v(" 则需要切换到新建的这个分支上")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git checkout 队员的分支名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("第二步：然后再执行 "),a("code",[s._v("git pull")]),s._v(" ,就可以拿到队员写的代码")]),s._v(" "),a("p",[s._v("第三步：切换回master主分支")]),s._v(" "),a("p",[s._v("第四步：合并分支代码到master")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git merge 队员的分支名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"常见的冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的冲突"}},[s._v("#")]),s._v(" 常见的冲突")]),s._v(" "),a("p",[s._v("队员在自己的分支下的某个功能添加或修改了一些内容，然后队员把代码push到自己远程分支上")]),s._v(" "),a("p",[s._v("此时队长在master分支上也在"),a("strong",[s._v("这个功能相同的地方")]),s._v("添加或者修改了一些内容，也把代码push到master分支上了")]),s._v(" "),a("p",[s._v("然后队长想要"),a("strong",[s._v("合并代码")])]),s._v(" "),a("p",[s._v("1、队长先在master上 "),a("code",[s._v("git pull")]),s._v("一下，保证代码最新无误")]),s._v(" "),a("p",[s._v("2、然后再切换到队员的分支下，执行"),a("code",[s._v("git pull")]),s._v("，拉取代码")]),s._v(" "),a("p",[s._v("3、再切换回master分支下，执行合并分支代码   "),a("code",[s._v("git merge 队员的分支名")])]),s._v(" "),a("p",[a("strong",[s._v("此时代码出现冲突")])]),s._v(" "),a("p",[s._v("会显示冲突的内容，当前的更改  和  传入(或者合并)的更改")]),s._v(" "),a("p",[a("strong",[s._v("商议解决冲突")]),s._v("，哪行代码需要或者不需要或者都需要（都需要的时候注意代码的前后顺序）")]),s._v(" "),a("p",[s._v("队长解决冲突后，再次提交远程master分支")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('git add .\n\ngit commit -am"说明的信息"\n\ngit push\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("队长解决冲突后，也提交到远程仓库了，此时队员需要拉取代码")]),s._v(" "),a("p",[s._v("1、"),a("strong",[s._v("队员")]),s._v("在自己的分支上 "),a("code",[s._v("git pull")]),s._v("（养成良好的习惯，每次提交拉取前先pull一下，保证代码最新无误）")]),s._v(" "),a("p",[s._v("2、然后切换到master分支下 "),a("code",[s._v("git pull")]),s._v(" ,")]),s._v(" "),a("p",[s._v("3、之后切换到自己的分支,合并master分支代码到自己的分支下，执行"),a("code",[s._v("git merge master")])]),s._v(" "),a("h2",{attrs:{id:"回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回退"}},[s._v("#")]),s._v(" 回退")]),s._v(" "),a("p",[s._v("如果新开发一个功能，并且上线推送到远程分支了，但是这个新功能不想要了，或者出错了")]),s._v(" "),a("p",[s._v("想要查看之前所有的提交,执行下边的这个命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git log  //会显示所有的提交日志信息，包括用户名，邮箱和提交的日期，以及commit时说明的信息\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("（此时会列出很多提交的日志，按 "),a("code",[s._v("K建和J建")]),s._v(" 上下查看）")]),s._v(" "),a("p",[s._v("如果想回退到某个提交版本，要记住 commit后边的版本哈希序列（一般记住前五六个就行）")]),s._v(" "),a("p",[s._v("按 "),a("code",[s._v("Q建")]),s._v(" 退出查看日志")]),s._v(" "),a("p",[s._v("执行回退")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git reset --hard 版本哈希序列\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);